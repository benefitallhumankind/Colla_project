<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BoardDao">
	<select id="selectBoardListPage" parameterType="map" resultMap="boardMap"> 
		select b_num, m_name, w_num, b_title, b_regdate, b_readcnt, b_type, r_cnt, 'y' as isnotice 
		from (
			    select rownum as r, b_num, m_name, w_num, b_title, b_regdate, b_readcnt, b_type
			            , (select count(*) from reply r where r.b_num = b.b_num) as r_cnt
			    from board b, member m
			    where b.w_num = #{wNum}
			        and b.b_type = 'notice'
			        and b.m_num = m.m_num
			    order by b.b_num desc
		)
		where r &lt;= 10  <!-- 최대 10개  -->
		UNION ALL
		select b_num, m_name, w_num, b_title, b_regdate, b_readcnt, b_type, r_cnt, 'n' as isnotice 
		from (select rn, b_num, m_name, w_num, b_title, b_regdate, b_readcnt, b_type, r_cnt
		        from (select rownum as rn, b_num, m_name, w_num, b_title, b_content, b_regdate, b_readCnt, b_type, r_cnt
		                from (select b_num, m.m_name, w_num, b_title, b_content, b_regdate, b_readCnt, b_type
		                         ,(select count(*) from reply r where b.b_num=r.b_num) as r_cnt
		                           from board b, member m
		                           where b.w_num = #{wNum} and m.m_num=b.m_num 
		                           group by b_num, m_name, w_num, b_title, b_content, b_regdate, b_readCnt, b_type
		                           order by b_num desc)
		                 where 1=0
		                 <if test="title != null">
		                 	or upper(b_title) like ('%'||upper('${keyword}')||'%')
		                 </if>
		                 <if test="content != null">
		                 	or upper(b_content) like ('%'||upper('${keyword}')||'%')
		                 </if>
		                 <if test="name != null">
		                 	or upper(m_name) like ('%'||upper('${keyword}')||'%')
		                 </if>
		                 <if test="type == 0">
		                 	or 1=1
		                 </if>
		              )
		        where rn &lt;= #{lastItem} -
		        						((select count(*) 
										from (select b_num 
										        from board 
										        where w_num=#{wNum}
										            and b_type='notice'
										  	   )
										)*#{page})
		        				
		)where rn &gt;=#{firstItem} -
        						((select count(*) 
								from (select b_num 
								        from board 
								        where w_num=#{wNum}
								            and b_type='notice'
								  	   )
								)*(#{page}-1))
	</select>
	<select id="selectCountAllByWnum" parameterType="map" resultType="int">
<!-- 		select count(b_num) from board where w_num=#{wNum} -->

						select count(b_num)
		                from (select b.b_num, b.b_title, b.b_content, m.m_name 
		                		from board b, member m 
		                		where w_num = #{wNum}
		                			and b.m_num = m.m_num)
		                where 1=0
		                 <if test="title != null">
		                 	or upper(b_title) like ('%'||upper('${keyword}')||'%')		                 	
		                 </if>
		                 <if test="content != null">
		                 	or upper(b_content) like ('%'||upper('${keyword}')||'%')	   
		                 </if>
		                 <if test="name != null">
		                 	or upper(m_name) like ('%'||upper('${keyword}')||'%')
		                 </if>
		                 <if test="type == 0">
		                 	or 1=1
		                 </if>

	</select>
	<select id="selectCountNoticeByWnum" parameterType="map" resultType="int">
		select count(b_num)
		from board
		where w_num=#{wNum} and b_type='notice'
	</select>
	<select id="selectAllBoardByWnum" parameterType="int" resultMap="boardMap">		
		    select b_num, m_name, w_num, b_title, b_regdate, b_readCnt, b_type
	        		, (select count(*) from reply r where b.b_num=r.b_num) as r_cnt
			from board b, member m
			where b.w_num = #{wNum} and m.m_num=b.m_num 
	        group by b_num, m_name, w_num, b_title, b_regdate, b_readCnt, b_type
			order by b_num desc
	</select>
	
	<select id="selectBoardBybNum" parameterType="int" resultMap="boardMap">
		select b_num, m_name, w_num, b_title, b_content, b_regdate, b_readCnt, b_pw, b_type
		from board b, member m
		where b.b_num = #{bNum} and m.m_num=b.m_num
	</select>
	
<!-- 	<select id="selectBoardBybNumWithFile" parameterType="int" resultMap="boardMap"> -->
<!-- 		select b.b_num, m.m_name, b.w_num, b.b_title, b.b_content, b.b_regdate, b.b_readCnt, b.b_pw, b.b_type, bf.bf_name -->
<!-- 		from board b, member m, boardfile bf -->
<!-- 		where b.b_num = #{bNum} -->
<!-- 			  and m.m_num=b.m_num(+) -->
<!-- 			  and b.b_num = bf.b_num(+) -->
<!-- 	</select> -->
	
	<delete id="deleteBoard" parameterType="int">
		delete from board where b_num = #{bNum}
	</delete>
	<insert id="insertBoard" parameterType="board">
		<selectKey resultType="int" keyProperty="bNum" order="BEFORE">
			select b_seq.nextval from dual
		</selectKey>
		insert into board
		values(
				#{bNum}, 
				#{mNum}, 
				#{wNum}, 
				#{bTitle}, 
				#{bContent}, 
				sysdate, 
				0,
				#{bPw},
				#{bType}
			)
	</insert>
	<update id="updateBoard" parameterType="board">
		update board set
			b_title = #{bTitle},
			b_content = #{bContent},
			b_type = #{bType}
		where b_num = #{bNum}
	</update>
	<update id="updateReadCnt" parameterType="int">
		update board set
			b_readcnt = b_readcnt+1
		where b_num = #{bNum}
	</update>
	
	<resultMap type="board" id="boardMap" >
		<result column="b_num" property="bNum"/>
		<result column="m_num" property="mNum"/>
		<result column="m_name" property="mName"/>
		<result column="w_num" property="wNum"/>
		<result column="b_title" property="bTitle"/>
		<result column="b_content" property="bContent"/>
		<result column="b_regdate" property="bRegDate"/>
		<result column="b_readCnt" property="readCnt"/>
		<result column="b_pw" property="bPw"/>
		<result column="b_type" property="bType"/>
		<result column="r_cnt" property="replyCnt"/>
		<result column="isnotice" property="isNotice"/>
	</resultMap>
	
</mapper>