<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MemberDao">
	<insert id="insertMember" parameterType="member">
		<selectKey resultType="int" keyProperty="num" order="BEFORE">
			select member_seq.nextval from dual
		</selectKey>
		insert into member(m_num,m_email,m_name,m_pw)
		values(#{num}, #{email}, #{name}, #{pw})
	</insert>
	<update id="updateMemberName">
		update member 
		set m_name=#{param1}
		where m_email=#{param2}
	</update>
	<update id="updateMemberPw">
		update member 
		set m_pw=#{param1}
		where m_email=#{param2}
	</update>
	<update id="updateMemberPhone">
		update member 
		set m_phone=#{param1}
		where m_email=#{param2}
	</update>
	<delete id="deleteMember" parameterType="int">
		delete member where m_num=#{num}
	</delete>
	<select id="selectMemberByEmail" parameterType="string" resultMap="memberMap">
		select * from member where m_email=#{email}
	</select>
	<select id="selectAll" resultMap="memberMap">
		select * from member
	</select>
	<select id="selectAuthoritesByNum" parameterType="int" resultType="string">
		select at_authority
		from authority
		where m_num = #{num}
	</select>
	<select id="selectAllMemberByWnum" parameterType="int" resultMap="memberMap">
		select m.m_num,m.m_email,m.m_name,m.m_pw,m.m_regDate,m.m_phone
		from member m,workspace_member ws
		where ws.w_num=#{wNum} and m.m_num=ws.m_num
	</select>
	<select id="selectAllMemberByCrNum" parameterType="int" resultMap="memberMap">
		select m.m_num,m.m_email,m.m_name,m.m_pw,m.m_regDate,m.m_phone
		from member m,chatroom_member crm
		where crm.cr_num=#{crNum} and m.m_num=crm.m_num
	</select>
	<select id="selectAllNotMemberByWnumCrNum" resultMap="memberMap">
		(select wm.m_num,m.m_name,m.m_email from workspace w,workspace_member wm, member m
		where w.w_num=wm.w_num and wm.m_num=m.m_num and wm.w_num=#{wNum})
		minus
		(select cm.m_num,m.m_name,m.m_email from chatroom_member cm, member m
		where cm.m_num=m.m_num and cm.cr_num=#{crNum} and cm.w_num=#{wNum})
	</select>
	<select id="selectMember" parameterType="int" resultMap="memberMap">
		select * from member where m_num=#{num}
	</select>
	<insert id="insertProfileImg">
		update member 
		set m_profileImg = #{profileImg, jdbcType=VARCHAR} 
		where m_num = #{num} 
	</insert>
	
	<!-- 권한 관련 -->
	<insert id="insertAuthority" parameterType="int">
		insert into authority(at_num, m_num, at_authority)
		values(authority_seq.nextval, #{num}, 'ROLE_USER')
	</insert>

	<resultMap type="member" id="memberMap">
		<result column="m_num" property="num"/>
		<result column="m_email" property="email"/>
		<result column="m_name" property="name"/>
		<result column="m_pw" property="pw"/>
		<result column="m_reg_date" property="regDate"/>
		<result column="m_phone" property="phone"/>
		<result column="m_profileimg" property="profileImg"/>
		<result column="cr_num" property="crNum"/>
	</resultMap>
	
	<!-- 이메일 인증 코드 관련 --> 
	
	<insert id="insertEmailVerify" parameterType="emailVerify">
		insert into emailVerify
		values(v_seq.nextval, #{email}, #{verifyCode}, sysdate)
	</insert>
	<update id="updateEmailVerify" parameterType="emailVerify">
		update emailVerify 
		set v_verifyCode=#{verifyCode}
		where v_email=#{email}
	</update>
	<select id="selectEmailVerify" parameterType="string" resultMap="emailVerifyMap">
		select * from emailVerify 
		where v_email=#{email}
	</select>
	
	<resultMap type="emailVerify" id="emailVerifyMap">
		<result column="v_num" property="num"/>
		<result column="v_email" property="email"/>
		<result column="v_verifycode" property="verifyCode"/>
		<result column="v_regdate" property="regDate"/>
	</resultMap>
	
</mapper>